#!/bin/bash

# Test ZAP configuration locally
# This script helps developers test the OWASP ZAP security scan configuration

echo "üîç Testing ZAP Security Scan Configuration..."
echo ""

# Check if ZAP configuration files exist
echo "üìÅ Checking ZAP configuration files:"
if [ -f ".zap/zap.yaml" ]; then
    echo "‚úÖ ZAP configuration: .zap/zap.yaml"
else
    echo "‚ùå ZAP configuration missing: .zap/zap.yaml"
    exit 1
fi

if [ -f ".zap/rules.tsv" ]; then
    echo "‚úÖ ZAP rules: .zap/rules.tsv"
else
    echo "‚ùå ZAP rules missing: .zap/rules.tsv"
    exit 1
fi

echo ""

# Check if application is running
echo "üåê Checking application status:"
if curl -f http://localhost:3000/api/health &>/dev/null; then
    echo "‚úÖ Application is running on http://localhost:3000"
else
    echo "‚ö†Ô∏è  Application is not running on http://localhost:3000"
    echo "üí° Start the application with: npm run start:servers"
    echo ""
fi

# Check if Docker is available (needed for ZAP)
echo "üê≥ Checking Docker availability:"
if command -v docker &> /dev/null; then
    echo "‚úÖ Docker is available"
    
    # Check if Docker daemon is running
    if docker ps &>/dev/null; then
        echo "‚úÖ Docker daemon is running"
    else
        echo "‚ùå Docker daemon is not running"
        echo "üí° Start Docker daemon to run ZAP security scans"
    fi
else
    echo "‚ùå Docker is not installed"
    echo "üí° Install Docker to run ZAP security scans"
fi

echo ""

# Validate ZAP configuration syntax
echo "üìã Validating ZAP configuration syntax:"
if command -v yamllint &> /dev/null; then
    if yamllint .zap/zap.yaml &>/dev/null; then
        echo "‚úÖ ZAP configuration syntax is valid"
    else
        echo "‚ö†Ô∏è  ZAP configuration has syntax issues"
        yamllint .zap/zap.yaml
    fi
else
    echo "‚ÑπÔ∏è  yamllint not available, skipping syntax validation"
fi

echo ""

# Show security scan commands
echo "üß™ Security scan commands:"
echo "   npm run test:security          # Run npm audit"
echo "   npm run test:security-unit     # Run security unit tests"
echo ""
echo "üîß ZAP security scan (requires Docker):"
echo "   # Manual ZAP baseline scan:"
echo "   docker run -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://localhost:3000"
echo ""
echo "   # ZAP with custom rules:"
echo "   docker run -v \$(pwd)/.zap:/zap/wrk:ro -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://localhost:3000 -c /zap/wrk/rules.tsv"
echo ""
echo "üöÄ The security scan will run automatically in GitHub Actions!"

echo ""
echo "==============================================="
echo "‚úÖ ZAP Security Scan Configuration Validated!"
echo "==============================================="